"""
Django settings for buzzer project.

Generated by 'django-admin startproject' using Django 2.0.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

from django.conf import global_settings
from django.urls import reverse_lazy
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
SETTINGS_DIR = os.path.dirname(os.path.abspath(__file__))
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_DIR = os.path.dirname(SETTINGS_DIR)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'sf7^5jrn36s+8n735!aw%g(rg^w$&7@2hw7ef8t_xz!%c(e&*('

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ADMINS = [
	('administrateur','erreur@danielpicque.fr')
]
MANAGERS  =  ADMINS

# Pour l'envoi de mails
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
SERVER_EMAIL = 'buzzer@danielpicque.fr'
EMAIL_HOST = 'danielpicque.fr'
EMAIL_HOST_USER = 'erreur@danielpicque.fr'
EMAIL_HOST_PASSWORD = 'erreur12'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
DEFAULT_FROM_EMAIL = 'buzzer@danielpicque.fr'

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'communs',
	'candidat',
	'pilote',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'buzzer.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'buzzer.wsgi_ovhfm2.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

#DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.sqlite3',
#        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#    }
#}

DATABASES = {
	'default': {
		'ENGINE': 'django.db.backends.mysql',
		'NAME':  'DB_BUZZER',
		'USER': 'user_buzzer',
		'PASSWORD': 'buzzer_user',
		'HOST': 'localhost',
		'PORT' : '3306',
		'TIME_ZONE':'Europe/Paris',
		'OPTIONS': {
			'charset': 'utf8mb4',
			'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
		},
	}
}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'fr-FR'

TIME_ZONE = 'Europe/Paris'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(PROJECT_DIR, 'dev_static'),

#STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)

MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = '/media/'
FILE_UPLOAD_TEMP_DIR = '/tmp'


#STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage' 


#LOGIN_REDIRECT_URL=reverse_lazy('creation')
#LOGIN_URL=reverse_lazy('login')
#LOGOUT_URL=reverse_lazy('logout')


#5MB - 5242880
# 10MB - 10485760
# 20MB - 20971520
# 50MB - 5242880
# 100MB 104857600
# 250MB - 214958080
# 500MB - 429916160

FILE_UPLOAD_MAX_MEMORY_SIZE = 104857600

SESSION_SAVE_EVERY_REQUEST = True

#EMAIL_NOTIF = BASE_DIR+'/creation/templates/creation/email_notif.html'

 
